{{define "js"}}
  <script src="/static/bootstrap.min.js"></script>
  <script>
    htmx.on('#form', 'htmx:xhr:progress', function(evt) {
      htmx.find('#progress').setAttribute('value', evt.detail.loaded/evt.detail.total * 100)
    });
  </script>
  <script>
    // dark mode toggle buutton.
    htmx.on('htmx:load', function(evt) { defaultMode(); });
    htmx.on('#darkModeSwitch', 'change', function(evt) { darkModeSwitch(); });

    function defaultMode() {
      const htmlElement = document.documentElement;
      const currentTheme = localStorage.getItem('bsTheme') || 'dark';
      htmlElement.setAttribute('data-bs-theme', currentTheme);
    }

    function darkModeSwitch() {
      let htmlElement = document.documentElement;
      let switchElement = document.getElementById('darkModeSwitch');
      if (switchElement.checked) {
        htmlElement.setAttribute('data-bs-theme', 'dark');
        localStorage.setItem('bsTheme', 'dark');
      } else {
        htmlElement.setAttribute('data-bs-theme', 'light');
        localStorage.setItem('bsTheme', 'light');
      }
    }
  </script>
  <script>
    htmx.on('htmx:load', function(evt) { updateName('filename'); });
    htmx.on(window, 'resize', function(evt) { updateName('filename'); });

    const modal = document.getElementById('modals-here')
    modal.addEventListener('shown.bs.modal', () => {
      updateName('modal-title') 
    })

    // Shorten the filename if it's too long to fit in the space available
    function updateName(id) {
      let filenameObj = document.getElementById(id);
      if (!filenameObj) return; // Not on the download page

      let filename = filenameObj.title;

      let availableWidth = filenameObj.clientWidth;

      // Calculate the width of the text using character width estimates
      let textWidth = filename.split('').reduce((acc, c) => acc + (c === ' ' ? 5 : 10), 0);
      
      if (textWidth > availableWidth) {
        let i = 0;
        let width = 60; // Allows space for ellipsis and end of filename including extension

        // Find the last space before the filename would overflow the available width
        while (i < filename.length && width < availableWidth) {
          width += filename[i] === ' ' ? 5 : 10;
          i++;
        }

        // Shorten the filename and add an ellipsis
        filename = filename.substr(0, i) + '...' + filename.substr(filename.length-6, filename.length);
      }

      filenameObj.innerText = filename;
    }
  </script>
{{end}}
